name: Build and Push Docker Image to ACR

on:
  push:
    branches:
      - main

env:
  IMAGE_TAG: $(date +%Y%m%d%H%M%S)

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      id-token: write  # Required for OIDC authentication

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package -DskipTests -P production

      # Authenticate with Azure using OIDC (Correct Fix)
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Log in to Azure Container Registry (ACR)
      - name: Log in to ACR
        run: az acr login --name ${{ secrets.ACR_NAME }}

      - name: Build and Push Docker Image to ACR
        env:
          DOCKER_BUILDKIT: 0  # Disable BuildKit
        run: |
          ACR_IMAGE=${{ secrets.ACR_LOGIN_SERVER }}/demo-kafka-producer
          JAR_FILE="target/demo-kafka-producer-0.0.1-SNAPSHOT.jar"
          
          # Ensure the JAR file exists before Docker build
          ls -l target/
          
          # Build the Docker image with the correct JAR file path
          docker build --build-arg JAR_FILE=$JAR_FILE -t $ACR_IMAGE:$IMAGE_TAG .
          
          docker tag $ACR_IMAGE:$IMAGE_TAG $ACR_IMAGE:latest
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          
          docker push $ACR_IMAGE:$IMAGE_TAG
          docker push $ACR_IMAGE:latest

  update-kustomize:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Helm/Kustomize Repository
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.HELM_REPO_OWNER }}/${{ secrets.HELM_REPO }}
          token: ${{ secrets.HELM_REPO_PAT }}
          path: .

      - name: Update `kustomization.yaml`
        env:
          ACR_IMAGE_NAME: ${{ secrets.ACR_LOGIN_SERVER }}/demo-kafka-producer
        run: |
          cd overlays/dev/
          if grep -q "name: $ACR_IMAGE_NAME" kustomization.yaml; then
            sed -i "s|newTag: .*|newTag: \"${{ env.IMAGE_TAG }}\"|" kustomization.yaml
          else
            echo "Error: Image block not found in kustomization.yaml"
            exit 1
          fi
          cat kustomization.yaml

      - name: Commit and Push Changes
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"
          git add overlays/dev/kustomization.yaml
          git commit -m "Update image tag to ${{ env.IMAGE_TAG }}"
          git push origin main


